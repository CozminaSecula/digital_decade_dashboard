---
title: "**Digital Decade Dashboard** <span style='font-size:9pt'><br>Created by Cozmina Secula</span>"
format:
  dashboard:
    nav-buttons: [github]
execute: 
  echo: false
  message: false
  warning: false
knitr: 
  opts_chunk: 
    dev: png
    dev.args: { bg: "transparent"}
embed-resources: true
---

```{r}
#| label: load-packages
#| include: false


library(tidyverse)
library(readr)
library(scales)
library(DT)
library(ggtext)
library(ggrepel)
library(statebins)
library(geofacet)

```

```{r}
#| label: load-data

df_dd <- read_csv("data/dd_eight_indicators.csv")

```

```{r}
#| label: prepare-data_ai
#| include: false

# Rename columns

dd_data <- df_dd |>
  mutate(country = as.factor(country.x),
         bt_tech_indic = as.factor(indicator.x),
         bt_sme_indic= as.factor(sme_indicator),
         hc_indiv_indic = as.factor(indicator.y),
         hc_ict_spec_indic = as.factor(ifelse(!is.na(ict_value), "Employed Ict specialist", NA)),
         ps_indic = as.factor(variable),
         bt_tech_value = dtech_value,
         bt_sme_value = sme_value,
         hc_indiv_value = value,
         hc_ict_spec_value = ict_value) |>
  select(year, geo, country, bt_tech_indic, bt_sme_indic, hc_indiv_indic, hc_ict_spec_indic, ps_indic, bt_tech_value, bt_sme_value, hc_indiv_value,  hc_ict_spec_value, ps_value)

# Filter data to include only AI indicator

dd_data_year_ai <- dd_data |>
  filter(year %in% c(2021, 2023),
         bt_tech_indic == "Enterprises use at least one of the AI technologies: AI_TTM, AI_TSR, AI_TNLG, AI_TIR, AI_TML, AI_TPA, AI_TAR") |>
  distinct(year,geo, country, bt_tech_indic, bt_tech_value)

# Make data frame for data viz

bt_ai_plot <- dd_data_year_ai |>
pivot_wider(names_from = year,
            values_from = bt_tech_value,
            names_prefix = "y_") |>
mutate(country = as.character(country),
       country = ifelse(country == "European Union - 27 countries (from 2020)", "EU", country),
       difference = y_2023 - y_2021,
       direction = if_else(y_2023 > y_2021, "2023 increase", "2023 decrease"))


# Make the plot

title_ai <- paste0("Enterprises in Denmark are at the forefront of AI technology adoption, despite a decrease from 2021")

subtitle_ai <- paste0("% of enterprises (10 persons employed or more)")

caption <- paste0("Source: Eurostat, EU survey on ICT usage and e-commerce in enterprises (2023)")

callout_ai <- paste0(
 "In 2023, <span style='color:#414040'>**8.03% of EU enterprises**</span> <br>used <span style='color:#414040'>**at least one AI technology**</span>.<br>By 2030, the EU goal is for <span style='color:#414040'>**75% of <br> enterprises**</span> to use at least one AI technology.")

bt_ai_plot$color_2021 <- "2021"
bt_ai_plot$color_2023 <- "2023"

plot_ai <- ggplot(bt_ai_plot) +
geom_segment(aes(x = reorder(country,y_2023),
                 xend = reorder(country, y_2023),
                 y = y_2021,
                 yend = y_2023,
                 color = direction),
                 linewidth = 5) +
geom_point(aes(x = reorder(country, y_2023),
               y = y_2021,
               color = color_2021),
               size = 1.5) +
scale_color_manual(values = c("2021" = "#414040", "2023 decrease" = "#C3514E", "2023 increase" = "#A6A6A5" )) +
scale_y_continuous(labels = scales::percent_format(scale = 1),
                  limits = c(0,40),
                  breaks = seq(from = 0, to = 40, by = 10)) +
labs(
  title = title_ai,
  subtitle = subtitle_ai,
  caption = caption
) +
theme_minimal() +
theme(
  axis.title = element_blank(),
  panel.grid.major.y = element_blank(),
  legend.title = element_blank(),
  legend.position = "top",
  legend.justification = 0,
  legend.text = element_text(size = 16,
                             family = "Georgia",
                             color = "#828282"),
  axis.text = element_text(size = 16,
                          family = "Georgia",
                          color = "#929497"),
  plot.title = element_textbox_simple(size = 22,
                              color = "#414040",
                              face = "bold", 
                              family = "Georgia",
                              margin = margin(12, 0, 12, 0)),
  plot.subtitle = ggtext::element_textbox_simple(size = 19,
                                                   vjust = 1,
                                                   margin = margin(0, 0, 12, 0),
                                                   color = "#646369",
                                                   family = "Georgia"),
  plot.caption = element_markdown(color = "#828282" , size = 12, hjust = 0,
                                  family = 'Georgia'),
  plot.title.position = "plot",
  plot.caption.position = "plot",
  plot.margin = margin(.5,.5,.5,.5,"cm")
) +
coord_flip() +
geom_richtext(
  aes(x = 29.1, y = 18, label = "-8.2 pp"), 
  family = "Georgia", size = 5, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA,
  fill = NA) +
geom_richtext(
  aes(x = 26.1, y = 10.5, label = "+3.4 pp"), 
  family = "Georgia", size = 5, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA,
  fill = NA) +
geom_richtext(
  aes(x = 14.5, y = 10.5, label = callout_ai), 
  family = "Georgia", size = 5.5, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA,
  fill = NA) +
annotate(
  "curve", x = 14.5, xend = 17, y = 13, yend = 8.3, curvature = 0.35, 
  angle = 60, color = "grey60", linewidth = .4, 
  arrow = arrow(type = "closed", length = unit(.08, "inches"))
  ) +
geom_richtext(
  aes(x = 18.1, y = 6.5, label = "+0.4 pp"), 
  family = "Georgia", size = 5, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA,
  fill = NA)

```


```{r}
#| label: prepare-data_cloud
#| results: hide

# Filter data to include only cloud computing indicator

dd_data_year_cloud <- dd_data |>
  filter(year %in% c(2021, 2023),
         bt_tech_indic == "Enterprises buying sophisticated or intermediate CC services, at least one of: CC_PFACC, CC_PERP, CC_PCRM, CC_PSEC, CC_PDB, CC_PDEV") |>
  distinct(year,geo, country, bt_tech_indic, bt_tech_value)

# Make data frame for data viz

bt_cloud_plot <- dd_data_year_cloud |>
pivot_wider(names_from = year,
            values_from = bt_tech_value,
            names_prefix = "y_") |>
mutate(country = as.character(country),
       country = ifelse(country == "European Union - 27 countries (from 2020)", "EU", country),
       difference = y_2023 - y_2021,
       direction = if_else(y_2023 > y_2021, "2023 increase", "2023 decrease"))

# Make the plot

title_cloud <- paste0("Enterprises in Poland and Hungary have made the most progress in adopting cloud computing services since 2021")

subtitle_cloud <- paste0("% of enterprises (10 persons employed or more)")

caption <- paste0("Source: Eurostat, EU survey on ICT usage and e-commerce in enterprises (2023)")

callout_cloud <- paste0(
 "In 2023, <span style='color:#414040'>**38.86% of EU enterprises**</span> <br>used <span style='color:#414040'>**cloud computing services**</span>.<br>By 2030, the EU goal is for <span style='color:#414040'>**75% of <br> enterprises**</span> to use cloud computing services.")

bt_cloud_plot$color_2021 <- "2021"
bt_cloud_plot$color_2023 <- "2023"

plot_cc <- ggplot(bt_cloud_plot) +
geom_segment(aes(x = reorder(country,y_2023),
                 xend = reorder(country, y_2023),
                 y = y_2021,
                 yend = y_2023,
                 color = direction),
                 linewidth = 5) +
geom_point(aes(x = reorder(country, y_2023),
               y = y_2021,
               color = color_2021),
               size = 1.5) +
scale_color_manual(values = c("2021" = "#414040", "2023 decrease" = "#C3514E", "2023 increase" = "#A6A6A5" )) +
scale_y_continuous(labels = scales::percent_format(scale = 1),
                  limits = c(0, 80),
                  breaks = seq(from = 0, to = 80, by = 10)) +
labs(
  title = title_cloud,
  subtitle = subtitle_cloud,
  caption = caption
) +
theme_minimal() +
theme(
  axis.title = element_blank(),
  panel.grid.major.y = element_blank(),
  legend.title = element_blank(),
  legend.position = "top",
  legend.justification = 0,
  legend.text = element_text(size = 16,
                             family = "Georgia",
                             color = "#828282"),
  axis.text = element_text(size = 16,
                          family = "Georgia",
                          color = "#929497"),
  plot.title = element_textbox_simple(size = 22,
                              color = "#414040",
                              face = "bold", 
                              family = "Georgia",
                              margin = margin(12, 0, 12, 0)),
  plot.subtitle = ggtext::element_textbox_simple(size = 19,
                                                   vjust = 1,
                                                   margin = margin(0, 0, 12, 0),
                                                   color = "#646369",
                                                   family = "Georgia"),
  plot.caption = element_markdown(color = "#828282" , size = 12, hjust = 0,
                                  family = 'Georgia'),
  plot.title.position = "plot",
  plot.caption.position = "plot",
  plot.margin = margin(.5,.5,.5,.5,"cm")
) +
coord_flip()+
geom_richtext(
  aes(x = 20.1, y = 33, label = "27.3 pp"), 
  family = "Georgia", size = 5, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA,
  fill = NA) +
geom_richtext(
  aes(x = 15.1, y = 24.5, label = "16.5 pp"), 
  family = "Georgia", size = 5, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA,
  fill = NA) +
geom_richtext(
  aes(x = 14.5, y = 47, label = callout_cloud), 
  family = "Georgia", size = 5.5, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA,
  fill = NA) +
annotate(
  "curve", x = 14.5, xend = 16, y = 54, yend = 39.5, curvature = 0.35, 
  angle = 60, color = "grey60", linewidth = .4, 
  arrow = arrow(type = "closed", length = unit(.08, "inches"))
  ) +
geom_richtext(
  aes(x = 16.5, y = 34, label = "4.8 pp"), 
  family = "Georgia", size = 5, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA,
  fill = NA)

```


```{r}
#| label: prepare-data_data_analytics
#| results: hide

# Filter data to include only data analytics indicator

dd_data_year_da <- dd_data |>
  filter(bt_tech_indic %in% c("Analyse big data internally from any data source or externally",
                              "Data analytics for the enterprise is performed by the enterprise's own employees or by an external provider")) |>
  mutate(bt_tech_indic = ifelse(bt_tech_indic == "Analyse big data internally from any data source or externally", "Big Data 2020", "Data Analytics 2023"),
         country = as.character(country),
         country = ifelse(country == "European Union - 27 countries (from 2020)", "EU", country)) |>
  distinct(year,geo, country, bt_tech_indic, bt_tech_value)


# Make the plot

subtitle_da <- paste0("% of enterprises (10 persons employed or more) using Data Analytics (former Big Data)")

caption <- paste0("Source: Eurostat, EU survey on ICT usage and e-commerce in enterprises (2023).")

lty <- c("solid")

title_da <- paste0("Data analytics is used most used by enterprises in Hungary, Croatia, and Denmark")

callout_da <- paste0(
 "In 2023, <span style='color:#414040'>**33.2% of EU enterprises**</span> <br>performed <span style='color:#414040'>**data analytics**</span>.<br>By 2030, the EU goal is for <span style='color:#414040'>**75% <br>of enterprises**</span> to use data analytics.")


plot_da <- ggplot(dd_data_year_da) +
geom_point(aes(x = bt_tech_indic,
               y = bt_tech_value),
           color = "#828282",
           size = 3.5) +
geom_line(aes(x = bt_tech_indic,
              y = bt_tech_value,
              group = country),
          color = "grey90",
          size = 1 ) +
geom_line(aes(x = bt_tech_indic,
              y = bt_tech_value,
              group = country),
          data = dd_data_year_da |>
          filter(country %in% c("Hungary", "Croatia", "EU")),
          color = "#000000")+
scale_color_identity() +
scale_x_discrete(expand = expansion(mult = c(0.2, 1.37), add = 0.3),
                 limits = c("Big Data 2020", "Data Analytics 2023"),
                 labels = c("2020", "2023")) +
scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)),
                   labels = scales::percent_format(scale = 1),
                   limits = c(5, 55),
                    breaks = seq(from = 5, to = 55, by = 10)) +
geom_text_repel(aes(x = bt_tech_indic,
              y = bt_tech_value,
              label = country), 
          nudge_x = -0.2,
          color = "#76787B", 
          data = dd_data_year_da |>
            filter(bt_tech_indic == "Big Data 2020"),
          hjust = 1) +
geom_text_repel(aes(x = bt_tech_indic,
              y = bt_tech_value,
              label = country), 
          nudge_x = 0.2,
          color = "#76787B", 
          data = dd_data_year_da |>
            filter(bt_tech_indic == "Data Analytics 2023"),
          hjust = 1) +
labs(
  title = title_da,
  subtitle = subtitle_da,
  caption = caption
) +
theme_minimal() +
theme(
  axis.title = element_blank(),
  axis.line = element_line(linewidth = .1, color = "#BFBEBE"),
  axis.ticks.x = element_line(linewidth = 0.5, color = "#BFBEBE"),
  axis.ticks.y = element_line(linewidth = 0.5, color = "#BFBEBE"),
  panel.grid = element_blank(),
  axis.text = element_text(size = 16,
                          family = "Georgia",
                          color = "#929497" ),
  plot.title = element_textbox_simple(size = 22,
                              color = "#414040",
                              face = "bold", 
                              family = "Georgia",
                              margin = margin(12, 0, 12, 0)),
  plot.subtitle = ggtext::element_textbox_simple(size = 19,
                                                   vjust = 1,
                                                   margin = margin(0, 0, 12, 0),
                                                   color = "#646369",
                                                   family = "Georgia"),
  plot.caption = element_markdown(color = "#828282" , size = 12, hjust = 0,
                                  family = 'Georgia'),
  plot.title.position = "plot",
  plot.caption.position = "plot",
  plot.margin = margin(.5,.5,.5,.5,"cm")
) +
geom_richtext(
  aes(x = 2.5, y = 30, label = callout_da), 
  family = "Georgia", size = 5.5, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA,
  fill = NA) +
  geom_richtext(
  aes(x = 1.83, y = 55, label = "Data Analytics"), 
  family = "Georgia", size = 6, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA, fontface = "bold",
  fill = NA) +
  geom_richtext(
  aes(x = 0.8, y = 32.2, label = "Big Data"), 
  family = "Georgia", size = 6, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA, fontface = "bold",
  fill = NA) +
annotate(
  "curve", x = 2.7, xend = 2.23, y = 30, yend = 33.15, curvature = 0.35, 
  angle = 60, color = "grey60", linewidth = .4, 
  arrow = arrow(type = "closed", length = unit(.08, "inches"))
  )


```

```{r}
#| label: prepare-data_ai_cc_da
#| results: hide


# ./hc_bt_ps_selected_kpi/wip/ai_cc_da.csv
ai_cc_da <- read_csv("data/ai_cc_da.csv")

ai_cc_da|>
  glimpse()

eu_grid1 <- eu_grid1[eu_grid1$name != "United Kingdom", ]
eu_grid1$name[eu_grid1$name == "Czech Republic"] <- "Czechia"


ai_cc_da <- ai_cc_da |>
  mutate(share = case_when(value < 25 ~ "< 25%",
                           value >= 25 & value < 50 ~ "25% - 50%",
                           value >=50 & value < 75 ~ "50% - 75%", 
                           value > 75 ~ "> 75%" ))|>
  inner_join(eu_grid1, by = c("country" = "name"))

# Make the plot

subtitle_ai_cc_da <- paste0("Enterprises using AI or cloud computing or data analytics in the EU in 2023")

caption <- paste0("Source: Eurostat, EU survey on ICT usage and e-commerce in enterprises (2023).")

title_ai_cc_da <- paste0("Enterprises' uptake of digital technologies varies greatly among EU member states.")

plot_ai_cc_da <- ggplot(data = ai_cc_da ) +
    statebins:::geom_rrect(data = ai_cc_da, mapping = aes(xmin = 1, xmax = 2, ymin = 1, ymax = 2), 
                           fill = 'white', 
                           color = "black", alpha = 0.5) +
    statebins:::geom_rrect(data = ai_cc_da |>
                           dplyr::filter(!is.na(value)),
                                             mapping = aes(xmin = 1, xmax = 2, ymin = 1, ymax = 2, fill =  value), 
              color = "#414040", alpha = 0.5) +
    geom_text(data = ai_cc_da, aes(x = 1.5, y = 1.5, label = country)) +
    scale_fill_continuous(low = "#F5F5F5", high = "#231F20", name = "% of enterprises") +
    facet_geo(~ country, grid = "eu_grid1") +
    labs(
      title = title_ai_cc_da,
      subtitle = subtitle_ai_cc_da,
      caption = caption
    )+
    theme_minimal() + 
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank(),
          axis.ticks.x = element_blank(),
          axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          axis.ticks.y = element_blank(),
          strip.placement = "bottom",
          strip.background = element_blank(),
          strip.text.x = element_blank(), 
          line = element_blank(),
          plot.title = element_textbox_simple(size = 20,
                              color = "#414040",
                              face = "bold", 
                              family = "Georgia",
                              margin = margin(12, 0, 12, 0)),
         plot.subtitle = ggtext::element_textbox_simple(size = 18,
                                                   vjust = 1,
                                                   margin = margin(0, 0, 12, 0),
                                                   color = "#646369",
                                                   family = "Georgia"),
         plot.caption = element_markdown(color = "#828282" , size = 12, hjust = 0,
                                  family = 'Georgia'),
         plot.title.position = "plot",
         plot.caption.position = "plot",
         plot.margin = margin(.5,.5,.5,.5,"cm"))


```




```{r}
#| label: prepare-data_basic_level_of_di
#| results: hide

# Filter data to include only basic level of digital intensity indicator (sme)

dd_data_year_sme <- dd_data |>
  filter(year %in% c(2021, 2023)) |>
  distinct(year,geo, country, bt_sme_indic, bt_sme_value)

# Make data grame for dat viz

bt_sme_plot <- dd_data_year_sme |>
pivot_wider(names_from = year,
            values_from = bt_sme_value,
            names_prefix = "y_") |>
mutate(country = as.character(country),
       country = ifelse(country == "European Union - 27 countries (from 2020)", "EU", country),
       difference = y_2023 - y_2021,
       direction = if_else(y_2023 > y_2021, "2023 increase", "2023 decrease"))



# Make the plot

title_sme <- paste0("Hungary, followed by Poland and Latvia have the greatest increase of the basic level of digital index")

subtitle_sme <- paste0("% enterprises (between 10 and 249 persons employed and self-employed persons)")

caption <- paste0("Source: Eurostat, EU survey on ICT usage and e-commerce in enterprises (2023)")

callout_sme <- paste0(
 "In 2023, <span style='color:#414040'>**57.75% of EU SME enterprises**</span> <br> had at least <span style='color:#414040'>**basic levels of digital intensity**</span>.<br>By 2030, the EU goal is for <span style='color:#414040'>**90% of enterprises**<br></span> to reach at least a basic level of digital intensity.")

bt_sme_plot$color_2021 <- "2021"
bt_sme_plot$color_2023 <- "2023"

plot_sme <- ggplot(bt_sme_plot) +
geom_segment(aes(x = reorder(country,y_2023),
                 xend = reorder(country, y_2023),
                 y = y_2021,
                 yend = y_2023,
                 color = direction),
                 linewidth = 5) +
geom_point(aes(x = reorder(country, y_2023),
               y = y_2021,
               yend = y_2021,
               color = color_2021),
               size = 1.5) +
scale_color_manual(values = c("2021" = "#414040", "2023 decrease" = "#C3514E", "2023 increase" = "#A6A6A5" )) +
scale_y_continuous(labels = scales::percent_format(scale = 1),
                  limits = c(0, 100),
                  breaks = seq(from = 0, to = 100, by = 10)) +
labs(
  title = title_sme,
  subtitle = subtitle_sme,
  caption = caption
) +
theme_minimal() +
theme(
  axis.title = element_blank(),
  panel.grid.major.y = element_blank(),
  legend.title = element_blank(),
  legend.position = "top",
  legend.justification = 0,
  legend.text = element_text(size = 16,
                             family = "Georgia",
                             color = "#828282"),
  axis.text = element_text(size = 16,
                          family = "Georgia",
                          color = "#929497"),
  plot.title = element_textbox_simple(size = 22,
                              color = "#414040",
                              face = "bold", 
                              family = "Georgia",
                              margin = margin(12, 0, 12, 0)),
  plot.subtitle = ggtext::element_textbox_simple(size = 19,
                                                   vjust = 1,
                                                   margin = margin(0, 0, 12, 0),
                                                   color = "#646369",
                                                   family = "Georgia"),
  plot.caption = element_markdown(color = "#828282" , size = 12, hjust = 0,
                                  family = 'Georgia'),
  plot.title.position = "plot",
  plot.caption.position = "plot",
  plot.margin = margin(.5,.5,.5,.5,"cm")
) +
coord_flip()+
geom_richtext(
  aes(x = 10.8, y = 40, label = "+18.7 pp"), 
  family = "Georgia", size = 5, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA,
  fill = NA) +
geom_richtext(
  aes(x = 7.8, y = 42, label = "+10.2 pp"), 
  family = "Georgia", size = 5, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA,
  fill = NA) +
geom_richtext(
  aes(x = 12.5, y = 61, label = callout_sme), 
  family = "Georgia", size = 5.5, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA,
  fill = NA) +
annotate(
  "curve", x = 12.5, xend = 14, y = 67, yend = 59, curvature = 0.35, 
  angle = 60, color = "grey60", linewidth = .4, 
  arrow = arrow(type = "closed", length = unit(.08, "inches"))
  ) +
geom_richtext(
  aes(x = 14.8, y = 53, label = "+2.9 pp"), 
  family = "Georgia", size = 5, lineheight = 1.2,
  color = "#414040", hjust = 0, vjust = 1.03,
  label.color = NA,
  fill = NA)

```


```{r}
#| label: prepare-data_statistical_population
#| results: hide

# Define the format_text function
format_text <- function(text, color = "#414040", size = 30, bold = FALSE) {
  opening_span = paste0("<span style='font-size:", size,"px; color:", color,"'>")
  if(bold) text = paste0("**", text, "**")
  closing_span = "</span>"
  paste0(opening_span, text, closing_span)
}

# Create a sample data frame similar to df_pop
df_pop <- data.frame(
  Label = c("Total Enterprises", "Survey Sample Size"),
  Value = c("1.5 million", "161.000")
)

# Create the text data for statistical population
total_entpr <- tibble(
  label = paste0(
    format_text("Total EU enterprises", color = "#555655", bold = TRUE, size = 50), " ","<br/>","<br/>","<br/>",
    format_text("Around", color = "#555655"),
    format_text(df_pop |>
                 filter(Value == "1.5 million") |> 
                 pull(Value), color = "#555655", size = 80, bold = TRUE), " ","<br/>", "<br/>",
    format_text("enterprises with at least 10 employees <br>and self-employed persons", "#555655")," ", "<br/>", "<br/>","<br/>","<br/>",
    format_text("Sample Size", color = "#555655", bold = TRUE, size = 50), " ", "<br/>", "<br/>","<br/>",
    format_text(df_pop |>
                filter(Value == "161.000") |> 
                pull(Value), color = "#555655", size = 80, bold = TRUE)," ",
    format_text("(10.7%)", color = "#555655", size = 40, bold = TRUE)," ", 
    format_text("enterprises", color = "#555655")," ", "<br/>", "<br/>",
    format_text("EU survey on ICT usage and e-commerce <br>in enterprises (2023)", color = "#555655")))

# Use geom_richtext from the ggtext package to render the label
plot_total_entpr <- ggplot(total_entpr, 
                           aes(x = 0, y = 0)) +
  geom_richtext(aes(label = label), 
                hjust = 0, 
                label.color = NA,
                fill = NA,
                lineheight = 1.5) +
  xlim(0, 0.01) +
labs(
  caption = "Source: https://ec.europa.eu/eurostat/cache/metadata/en/isoc_e_esms.htm") +
theme_minimal() +
theme( 
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  axis.ticks.x = element_blank(),
  axis.ticks.y = element_blank(),
  axis.title = element_blank(),
  axis.line = element_blank(),
  axis.text.y = element_blank(),
  axis.text.x = element_blank(),
  axis.title.x = element_blank(),
  axis.title.y = element_blank(),
  plot.caption = element_text(hjust = 0, color = "#828282"),
  plot.caption.position = "plot",
  plot.margin = unit(c(0,0,0,0),"cm"))




```



# {.sidebar}

<br>

::: {.callout collapse="true"}
## Overview
Europe aims to empower businesses and people in a human-centered, sustainable, and more prosperous digital future.
The Digital Decade targets provide a framework to measure progress towards that goal.

4 principal dimensions were defined: 

 - Human Capital 
 - Digital transformation of Business
 - Digital Infrastructure
 - Digitalization of Public Services
 
Each dimension has more sub-dimensions. Each sub-dimension has its key performance indicators (KPIs).

The goal for this dashboard is two-fold:

- To visualize how selected KPIs for each dimension performed in 2023 compared with 2021
- To visualize how EU member states progressed for selected KPIs

The visualizations are organized into one page for each dimension.
 
:::


## KPIs Definitions

::: {.callout collapse="true"}
## AI

Artificial intelligence, measured as the percentage of enterprises using at least one artificial intelligence technology such as:

- text mining
- speech recognition
- natural language generation
- image recognition and processing
- machine learning (e.g., deep learning) for data analysis
- AI based software robotic process automation
- autonomous robots
- self-driving vehicles
- autonomous drones.
:::

::: {.callout collapse="true"}
## Cloud Computing

Cloud computing, measured as the percentage of enterprises using at least one of the following cloud computing services:

- finance or accounting
- software applications
- enterprise resource planning (ERP) software applications
- customer relationship management (CRM) software applications
- security software applications
- hosting the enterprise’s database(s)
- computing platform providing a hosted environment for application development, testing or deployment.
:::

::: {.callout collapse="true"}
## Data Analytics
In 2023, Eurostat replaced the Big Data indicator with the Data Analytics one.
Data analytics refers to the use of technologies, techniques or software tools for analysing data to extract patterns, trends and insights to make conclusions, and predictions and ensure better decision-making with the aim of improving performance (e.g., increase production, reduce costs). Data may be extracted from your own enterprise’ data source or from external sources (e.g., suppliers, customers, government). 

Data Analytics includes a broader set of technologies than the former Big Data.
:::

::: {.callout collapse="true"}
## AI or Cloud or Data analytics
Artificial Intelligence or Cloud computing services or Data analytics. This indicator is available and calculated for the first time in 2023.
:::


::: {.callout collapse="true"}
## Basic level of digital intensity
SMEs with at least a basic level of digital intensity, measured as the percentage of SMEs using at least 4 of 12 selected digital technologies.

The 2023 survey included the following 12 technologies and/or criteria (source Eurostat):

- Enterprises where more than 50% of the persons employed used computers with access
to the internet for business purposes;
- Have ERP software package to share information between different functional areas; - The maximum contracted download speed of the fastest fixed line internet connection is at least 30 Mb/s; 
- Enterprises where web sales were more than 1% of the total turnover and B2C web sales more than 10% of the web sales; 
- Data analytics for the enterprise is performed by the enterprise's own employees or by an external provider; 
- Use any social media;
- Have customer relationship management (CRM) software; 
- Buy sophisticated or intermediate cloud computing services; 
- Use any AI technology; 
- Buy cloud computing services used over the internet;
- Used any computer networks for sales (at least 1%);
- Use two or more social media

The Enterprise survey questions used for the definition of the Digital Intensity Index vary every year but in 2023 most of the technologies are the same as those of the 2021survey. The list used by year is provided by Eurostat.

:::

# Businesses {orientation="columns"}

## Column {width="33%"}
### Row {height="35%"}

```{r}
#| title: Statistical Population
#| fig-width: 12
#| fig-asp: 0.618
#| padding: 5px
#| width: 90%



plot_total_entpr


```



### Row {height="65%"}

```{r}
#| title: Basic level of digital intensity
#| fig-width: 14
#| fig-asp: 1.05
#| padding: 5px
#| width: 90%


plot_sme


```


## Column {width="33%"}

### Row {height="50%"}
```{r}
#| title: AI
#| fig-width: 14
#| fig-asp: 0.75
#| padding: 5px
#| width: 90%

plot_ai

```


### Row {height="50%"}

```{r}
#| title: Cloud Computing
#| fig-width: 14
#| fig-asp: 0.75
#| padding: 5px
#| width: 90%


plot_cc


```


## Column {width="33%"}

### Row {height="35%" .tabset}

```{r}
#| title: AI or Cloud or Data Analytics
#| fig-width: 10
#| fig-asp: 0.618
#| padding: 5px
#| width: 90%



plot_ai_cc_da
  
```

```{r}
#| title: Data
#| width: 70%

ai_cc_da |>
select(year, country, entsize, unit, activity, indicator, value) |>
arrange(desc(value)) |>
datatable(options = list(pageLength = 5, 
                         scrollY = TRUE))

```


### Row {height="65%"}

```{r}
#| title: Data Analytics
#| fig-width: 14
#| fig-asp: 1.05
#| padding: 5px
#| width: 90%

plot_da
  
```


